- 
  var appObj = { "id": "AMC",
    "msgs": [
          {"macro": "AMC_CMD_MID", "type": "CMD", "id": 7229},
          {"macro": "AMC_SEND_HK_MID", "type": "CMD", "id": 7230},
          {"macro": "AMC_UPDATE_MOTORS_MID", "id": 7231},
          {"macro": "AMC_OUT_DATA_MID", "type": "TLM", "id": 3136},
          {"macro": "AMC_HK_TLM_MID", "type": "TLM", "id": 3137}
      ]
  }
.row.os-theme-dark
  article.col-xs-12.col-sm-12
    header
      span.widget-icon
        i.fa.fa-table
      h2 AMC - Telemetry Control
    div.widget-body.table-responsive
      table.table.table-condensed
        tbody
          tr
            th(style='width: 150px') Cmd Count
            td
              span(data-sage={tlm: [{name:'/CFS/TO/CmdCounter'}]}) ---
          tr
            th Error Count
            td
              span(data-sage={tlm: [{name:'/CFS/TO/ErrCounter'}]}) ---
    .table-responsive
      table.table.table-bordered.table-condensed
        tbody
          - for (var idx = 0; idx < msgs.length; ++idx) {
            - /* Determine the actual message ID. */
            - var msgID = 0x0800 + msgs[idx].apid;
            - var cmdAddEntry = {cmd:{name:'/CFS/TO/AddMessage', argument:[{name:'ChannelIdx', value: 'GROUND'}, {name:'MsgID', value:msgID}, {name:'MsgLimit', value:1}]}};
            - var cmdRemoveEntry = {cmd:{name:'/CFS/TO/RemoveMessage', argument:[{name:'ChannelIdx', value: 'GROUND'}, {name:'MsgID', value:msgID}]}};
          tr
            th #{msgs[idx].macro}
            td 
              button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdAddEntry) Tlm Start
              button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdRemoveEntry) Tlm Stop
          - }

      mixin app_specific_telemetry_control(appID)
        -
          var appObj = {};
          /* Get the application object. */
          for (var idx = 0; idx < fsw.apps.length; ++idx) {
            if(fsw.apps[idx].id === appID) {
              /* Found it. */
              appObj = fsw.apps[idx]
            }
          }
          
          /* Don't proceed unless we found the application. */
          var msgs = [];
          if(appObj.id !== undefined) {
            /* Don't continue if there isn't a 'msgs' property. */
            if(appObj.hasOwnProperty('msgs')) {
              /* Iterate through the application messages. */
              for (var idxAppMsgs = 0; idxAppMsgs < appObj.msgs.length; ++idxAppMsgs) {
              
                /* Get the corresponding message definition object. */
                for (var idxMsgs = 0; idxMsgs < fsw.msgDefs.length; ++idxMsgs) {
                
                  /* Is this the message we're looking for? */
                  if(fsw.msgDefs[idxMsgs].macro === appObj.msgs[idxAppMsgs].macro) {
                  
                    /* Found it.  Now see if its a telemetry message. */
                    if(appObj.msgs[idxAppMsgs].type === "TLM") {
                    
                      /* It is a telemetry message.  Add it to the msgs array. */
                      msgs.push(fsw.msgDefs[idxMsgs]);
                    }
                  }
                }
              }
            }
            
            /* Don't go any further unless we actually have messages in our msgs array. */
            if(msgs.length > 0){
        article.col-xs-12.col-sm-12.col-md-12.col-lg-8
          #wid-TO-Control.jarviswidget.jarviswidget-color-blueDark(style='width: 860px' data-widget-editbutton='false')
            header
              span.widget-icon
                i.fa.fa-table
              h2 Telemetry Control 
            div
              .jarviswidget-editbox
                input.form-control(type='text')
              .widget-body
                .table-responsive
                  table.table.table-condensed
                    tbody

        -
            }
          }
